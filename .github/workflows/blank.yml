name: Monitoramento de Passagens Aéreas

on:
  schedule:
    - cron: "0 */4 * * *"     # a cada 4h (UTC)
  workflow_dispatch:

jobs:
  monitor-passagens:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      # --- Teste rápido: manda msg no Telegram p/ validar segredos ---
      - name: Ping Telegram (teste)
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python - <<'PY'
          import os, requests, sys
          token = os.getenv("BOT_TOKEN")
          chat  = os.getenv("CHAT_ID")
          if not token or not chat:
              sys.exit("Faltam BOT_TOKEN/CHAT_ID")
          url = f"https://api.telegram.org/bot{token}/sendMessage"
          r = requests.post(url, json={"chat_id": chat, "text": "✅ GitHub Actions conectado ao Telegram."}, timeout=20)
          r.raise_for_status()
          print("OK:", r.json().get("ok"))
          PY

      - name: Run monitor
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          ORIGEM:    GYN
          DESTINOS:  FOR,SSA,REC,NAT,BSB,CGH,GIG
        run: python monitor_passagens.py

      - name: Append run log
        run: echo "Monitoramento executado em $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> log.txt

      - name: Upload log
        uses: actions/upload-artifact@v4
        with:
          name: log-monitor-passagens
          path: log.txt
          if-no-files-found: warn

