name: Monitoramento de Passagens (Amadeus)

on:
  schedule:
    - cron: "0 */4 * * *"   # executa a cada 4h (UTC)
  workflow_dispatch:

jobs:
  monitor-passagens:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency:
      group: monitor-passagens
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Diagnóstico secrets e arquivos
        env:
          AMADEUS_API_KEY:    ${{ secrets.AMADEUS_API_KEY }}
          AMADEUS_API_SECRET: ${{ secrets.AMADEUS_API_SECRET }}
        run: |
          echo "AMADEUS_API_KEY: $([ -n "$AMADEUS_API_KEY" ] && echo OK || echo MISSING)"
          echo "AMADEUS_API_SECRET: $([ -n "$AMADEUS_API_SECRET" ] && echo OK || echo MISSING)"
          echo "Arquivos na raiz:"; ls -la

      - name: Teste OAuth Amadeus (isolado)
        env:
          AMADEUS_API_KEY:    ${{ secrets.AMADEUS_API_KEY }}
          AMADEUS_API_SECRET: ${{ secrets.AMADEUS_API_SECRET }}
          AMADEUS_ENV: sandbox
          AMADEUS_BASE_URL: https://test.api.amadeus.com
        run: |
          python check_amadeus_api.py

      - name: Run monitor (Amadeus)
        env:
          AMADEUS_API_KEY:    ${{ secrets.AMADEUS_API_KEY }}
          AMADEUS_API_SECRET: ${{ secrets.AMADEUS_API_SECRET }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          AMADEUS_ENV: sandbox                   # troque para 'production' se suas chaves forem de produção
          AMADEUS_BASE_URL: https://test.api.amadeus.com
        run: |
          python monitor_passagens.py --debug