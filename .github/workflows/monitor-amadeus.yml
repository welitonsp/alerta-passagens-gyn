name: Monitoramento de Passagens (Amadeus - SANDBOX)

on:
  schedule:
    - cron: "0 */4 * * *"   # a cada 4 horas (UTC)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  monitor-passagens:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    concurrency: monitor-passagens

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Debug env (AMADEUS)
        run: |
          echo "== ENV CHECK ==" 
          env | sort | grep -E 'AMADEUS|ALLOW_PROD|ORIGEM|DESTINOS' || true

      - name: Ping Telegram (teste)
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python - <<'PY'
          import os,requests,sys
          t=os.getenv("TELEGRAM_BOT_TOKEN"); c=os.getenv("TELEGRAM_CHAT_ID")
          if not t or not c: sys.exit(0)
          r=requests.post(f"https://api.telegram.org/bot{t}/sendMessage",
                          json={"chat_id":c,"text":"✅ Conectado ao Telegram."},timeout=20)
          print("HTTP", r.status_code); r.raise_for_status()
          PY

      - name: Run monitor (Amadeus)
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          AMADEUS_API_KEY:    ${{ secrets.AMADEUS_API_KEY }}
          AMADEUS_API_SECRET: ${{ secrets.AMADEUS_API_SECRET }}
          AMADEUS_ENV: sandbox     # força SANDBOX
          ALLOW_PROD: "0"          # trava produção
          ORIGEM: GYN
          DESTINOS: GIG,SDU,SSA,FOR,REC,NAT,MCZ,AJU,MAO,BEL,SLZ,THE,BSB,FLN,POA,CWB,CGR,CGB,CNF,VIX,JPA,PMW,PVH,BVB,RBR,GYN,GRU,CGH
          CURRENCY: BRL
          SAMPLE_DEPARTURES: "2"
          MAX_OFFERS: "5"
          REQUEST_DELAY: "1.2"
          MAX_PRECO_PP: "1200"
          MIN_DISCOUNT_PCT: "0.25"
          HISTORY_PATH: data/history.csv
        run: python monitor_passagens.py

      - name: Commit histórico (se mudou)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(monitor): atualizar histórico de preços"
          file_pattern: data/history.csv